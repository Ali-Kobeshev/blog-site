{"version":3,"file":"static/js/563.5f871463.chunk.js","mappings":"uPAkBO,MAAMA,EAAgCC,IAA+B,IAA9B,QAAEC,EAAO,YAAEC,GAAaF,EACnE,MAAOG,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAE3B,IAAKF,EACF,MAAM,IAAIG,MAAM,gDAGnB,MAAM,gBAAEC,EAAe,mBAAEC,GAAuBL,EAqBhD,OACGM,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACGD,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAAD,SAAA,EACTE,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACJC,QAAUC,IACPA,EAAEC,kBACFf,GAAa,EAAK,EAErBgB,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,EAAY,IACxBC,KAAK,QAAOT,SACd,UAGDE,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACJC,QAASA,KAhClBf,GAAaqB,GACHA,EAAKC,QAAQC,GAAgBA,EAAIC,KAAOzB,EAAQyB,MA+BlB,EAC/BN,WAAWL,EAAAA,EAAAA,KAACY,EAAAA,EAAU,IACtBL,KAAK,QAAOT,SACd,cAIHV,IACEY,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CACHX,QAASA,KACNb,GAAa,EAAM,EACpBS,UAEFE,EAAAA,EAAAA,KAAA,OACGE,QAAUC,GAAMA,EAAEC,kBAClBU,UAAWC,EAAAA,EAAGC,8BAA8BlB,UAE5CE,EAAAA,EAAAA,KAACiB,EAAAA,EAAa,CACXC,aA7CKC,IACpBhC,GAAaqB,GACHA,EAAKY,KAAKC,GACVA,EAAKV,KAAOzB,EAAQyB,GACd,IAAKzB,EAASoC,QAASH,GAE1BE,MAGbzB,GAAmB,GACnBP,GAAa,EAAM,EAoCJkC,kBAAmBrC,EAAQoC,gBAKpC,C,kCCpFZ,SAAgB,8BAAgC,+C","sources":["widgets/commentList/ui/moreActions/actions/OwnCommentsActions.tsx","webpack://react-blog/./src/widgets/commentList/ui/moreActions/actions/Actions.module.scss?ca3b"],"sourcesContent":["import cl from \"./Actions.module.scss\";\r\nimport { Button } from \"@mui/material\";\r\nimport ModeEditIcon from \"@mui/icons-material/ModeEdit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { FC, Dispatch, SetStateAction, useState, useContext } from \"react\";\r\nimport { ICommentType, IRawContent, IReply } from \"../../../../../shared/types\";\r\nimport { CommentEditor } from \"../../../../../features/editor\";\r\nimport { Modal } from \"../../../../../shared/ui/modal/Modal\";\r\nimport { ShowMoreActionsContext } from \"../../../../../shared/ui/callMoreActions/CallMoreActions\";\r\nimport { OverlayMenu } from \"../../../../../shared/ui/overlay menu/OverlayMenu\";\r\n\r\ntype Entity = IReply | ICommentType;\r\n\r\ninterface Props {\r\n   comment: Entity;\r\n   setComments: Dispatch<SetStateAction<Entity[]>>;\r\n}\r\n\r\nexport const OwnCommentsActions: FC<Props> = ({ comment, setComments }) => {\r\n   const [openModal, setOpenModal] = useState(false);\r\n   const context = useContext(ShowMoreActionsContext);\r\n\r\n   if (!context) {\r\n      throw new Error(\"Use within a ShowMoreActionsContext.Provider\");\r\n   }\r\n\r\n   const { showMoreActions, setShowMoreActions } = context;\r\n\r\n   const deleteComment = () => {\r\n      setComments((prev: Entity[]) => {\r\n         return prev.filter((com: Entity) => com.id !== comment.id);\r\n      });\r\n   };\r\n\r\n   const updateComment = (editedContent: IRawContent) => {\r\n      setComments((prev: Entity[]) => {\r\n         return prev.map((comm: Entity) => {\r\n            if (comm.id === comment.id) {\r\n               return { ...comment, content: editedContent };\r\n            }\r\n            return comm;\r\n         });\r\n      });\r\n      setShowMoreActions(false);\r\n      setOpenModal(false);\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         <OverlayMenu>\r\n            <Button\r\n               onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setOpenModal(true);\r\n               }}\r\n               startIcon={<ModeEditIcon />}\r\n               size=\"small\"\r\n            >\r\n               Edit\r\n            </Button>\r\n            <Button\r\n               onClick={() => deleteComment()}\r\n               startIcon={<DeleteIcon />}\r\n               size=\"small\"\r\n            >\r\n               Delete\r\n            </Button>\r\n         </OverlayMenu>\r\n         {openModal && (\r\n            <Modal\r\n               onClick={() => {\r\n                  setOpenModal(false);\r\n               }}\r\n            >\r\n               <div\r\n                  onClick={(e) => e.stopPropagation()}\r\n                  className={cl.innerModuleElementsBackground}\r\n               >\r\n                  <CommentEditor\r\n                     upsertAction={updateComment}\r\n                     initialRawContent={comment.content}\r\n                  />\r\n               </div>\r\n            </Modal>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"innerModuleElementsBackground\":\"Actions_innerModuleElementsBackground__GDNsQ\"};"],"names":["OwnCommentsActions","_ref","comment","setComments","openModal","setOpenModal","useState","context","useContext","ShowMoreActionsContext","Error","showMoreActions","setShowMoreActions","_jsxs","children","OverlayMenu","_jsx","Button","onClick","e","stopPropagation","startIcon","ModeEditIcon","size","prev","filter","com","id","DeleteIcon","Modal","className","cl","innerModuleElementsBackground","CommentEditor","upsertAction","editedContent","map","comm","content","initialRawContent"],"sourceRoot":""}